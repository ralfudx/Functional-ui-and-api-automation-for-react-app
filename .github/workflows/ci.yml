name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo
        ports:
          - 27017:27017
        options: --health-cmd="mongo --eval 'db.runCommand({ ping: 1 })'" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - name: ⬇️ Checkout Code
        uses: actions/checkout@v3

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # ----------- Backend Setup -----------
      - name: 📦 Install Backend Dependencies
        working-directory: ./api
        run: |
          npm install
          npm run seed

      - name: 🚀 Start Backend in Background
        working-directory: ./api
        run: |
          nohup node app.js > ../backend.log 2>&1 &
          sleep 10

      # ----------- API Tests -----------
      - name: 📦 Install API Test Dependencies
        working-directory: ./supertest-automation
        run: npm install

      - name: 🤮 Run API Tests (Jest)
        working-directory: ./supertest-automation
        run: npm test

      # ----------- Frontend Setup -----------
      - name: 📦 Install Frontend Dependencies
        working-directory: ./client
        run: npm install

      - name: 🚀 Start Frontend in Background
        working-directory: ./client
        run: |
          nohup npm start > ../frontend.log 2>&1 &
          sleep 15

      # ----------- Cypress UI Tests -----------
      - name: 📦 Install Cypress Dependencies
        working-directory: ./cypress-automation
        run: npm install

      - name: 🤮 Run Cypress UI Tests (Headless)
        working-directory: ./cypress-automation
        run: npm test

      # ----------- Debug: Upload Logs on Failure -----------
      - name: 📄 Upload Logs (if failure)
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: |
            backend.log
            frontend.log
